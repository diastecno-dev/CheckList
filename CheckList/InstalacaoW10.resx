<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>